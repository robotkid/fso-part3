{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","props","value","searchItem","onChange","changeHandler","PersonForm","onSubmit","formSubmitHandler","nameValue","nameChangeHandler","numberValue","numberChangeHandler","type","Person","person","deleteHandler","name","number","onClick","id","Persons","persons","map","p","key","Notification","message","error","className","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchItem","notificationMessage","setNotificationMessage","isError","setIsError","useEffect","personService","initialPersons","personsToShow","filter","toUpperCase","includes","notify","console","log","setTimeout","event","target","preventDefault","index","replaceMessage","existingIndex","findIndex","window","confirm","returnedPerson","newPersons","catch","newPerson","concat","personIndex","personName","updatedPersons","splice","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.385270b9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = (props) =>\n  <p>filter shown with <input value={props.searchItem} onChange={props.changeHandler} /></p>\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.formSubmitHandler}>\n      <div>\n        name: <input value={props.nameValue} onChange={props.nameChangeHandler} />\n        <br />\n        number: <input value={props.numberValue} onChange={props.numberChangeHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\n\nconst Person = ({person, deleteHandler}) =>\n  <p>{person.name} {person.number} <button onClick={deleteHandler(person.id)}>delete</button></p>\n\n\nconst Persons = (props) =>\n  props.persons.map(p => <Person\n                            key={p.name}\n                            person={p}\n                            deleteHandler={props.deleteHandler} />)\n\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({message, error}) => {\n  \n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={`notification ${error ? 'error' : 'success'}`}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst del = (id) => {\n  return axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default { \n  getAll: getAll, \n  create: create, \n  update: update,\n  del: del\n}","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport personService from './services/persons'\n\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchItem, setSearchItem ] = useState('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n  const [ isError, setIsError ] = useState(false)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n  \n  const personsToShow =\n    persons.filter(p => p.name.toUpperCase().includes(searchItem.toUpperCase()))\n\n  const updateNumber = (index) => {\n    personService\n      .update(persons[index].id, {...persons[index], number:newNumber})\n      .then( (returnedPerson) => {\n        const newPersons = [...persons]\n        newPersons[index] = returnedPerson\n        setPersons(newPersons)\n        notify(`Changed number for ${newName}`, false)\n      })\n      .catch(error => {\n        notify(`${newName} was already removed from the server`, true)\n      })\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const replaceMessage = `${newName} is already in the phonebook. Replace the old number with a new one?`\n    const existingIndex = persons.findIndex(p => p.name === newName)\n    if (existingIndex >= 0 && window.confirm(replaceMessage)) {\n      updateNumber(existingIndex)\n    }\n    else {\n      const newPerson = {name: newName, number: newNumber}\n      console.log(newPerson)\n      personService\n        .create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setNewName('')\n          setNewNumber('')\n          notify(`Added ${returnedPerson.name}`, false)\n        })\n        .catch(error => {\n          console.log(error.response.data)\n          notify(error.response.data.error, true)\n        })\n    }\n  }\n\n  const notify = (message, error) => {\n    console.log(message)\n    setNotificationMessage(message)\n    setIsError(error)\n    setTimeout(() => setNotificationMessage(null), 3000)    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearchChange = (event) => {\n    setSearchItem(event.target.value)\n  }\n\n  const handleDelete = (id) => () => {\n    const personIndex = persons.findIndex(p => p.id === id)\n    const personName = persons[personIndex].name\n    if (window.confirm(`Delete ${personName}`))\n    personService.del(id)\n      .then( () => {  \n        const updatedPersons = [...persons]\n        updatedPersons.splice(personIndex, 1)\n        setPersons(updatedPersons)\n        notify(`Deleted ${personName}`, false)\n      })\n  }\n\n  return (\n    <div>\n      <Notification message={notificationMessage} error={isError} />\n\n      <h2>Phonebook</h2>\n\n      <Filter searchItem={searchItem} changeHandler={handleSearchChange} />\n      \n      <h3>add a new</h3>\n\n      <PersonForm \n        formSubmitHandler={addName}\n        nameValue={newName} nameChangeHandler={handleNameChange}\n        numberValue={newNumber} numberChangeHandler={handleNumberChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons persons={personsToShow} deleteHandler={handleDelete} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}